<!DOCTYPE html>
<html lang="en" style="overflow: hidden">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Video Player</title>
    <style>
        body {
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            /*background-color: #f0f0f0;*/
        }

        .video-container {
            position: relative;
            width: 100%; /* Điều chỉnh kích thước màn hình video tùy ý */
            height: 100%; /* Điều chỉnh kích thước màn hình video tùy ý */
            background-size: 100% 100%;
            background-color: rgba(0, 0, 0, 0.8);
            background-image: url("url_image_thumbnail");
        }

        .video-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            display: none;
        }

        /*.play-button {*/
        /*    border: 0;*/
        /*    background: transparent;*/
        /*    box-sizing: border-box;*/
        /*    width: 0;*/
        /*    height: 50px;*/

        /*    border-color: transparent transparent transparent #FFFFFF;*/
        /*    transition: 100ms all ease;*/
        /*    cursor: pointer;*/

        /*    border-style: solid;*/
        /*    border-width: 27px 0 27px 40px;*/

        /*    !*margin-lef: 46px;*!*/
        /*    transform: translate(-50%, -50%);*/

        /*    position: absolute;*/
        /*    top: 50%;*/
        /*    left: 46px;*/
        /*}*/

        /*.play-button.paused {*/
        /*    border-style: double;*/
        /*    border-width: 0px 0 0px 60px;*/
        /*}*/

        .play-button {
            position: relative;
            /*top: 50%;*/
            /*left: 46px;*/
            /*transform: translate(-50%, -50%);*/
            width: 70px;
            height: 50px;
            left: 1%;
            /*background-color: red;*/
            border: none;
            /*border-radius: 5px;*/
            cursor: pointer;
        }

        .play-button.paused::after {
            border-style: double;
            border-width: 0px 0 0px 18px;
            height: 18px;
        }

        .play-button::after {
            content: "";
            display: block;
            width: 0;
            height: 0;
            border-style: solid;
            border-width: 11px 0 11px 18px;
            border-color: transparent transparent transparent white;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-40%, -50%);
            transition: all 0.4s;
        }

        .loading-screen {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.8);
            display: none;
        }

        .loading-spinner {
            position: absolute;
            top: 50%;
            left: 50%;
            translate: -50% -50%;
            width: 50px;
            height: 50px;
            border: 5px solid #fff;
            border-radius: 50%;
            border-top-color: transparent;
            animation: spin 1s linear infinite;
        }

        .video-controls {
            background: rgba(0, 0, 0, 0.64);
            position: absolute;
            bottom: 0;
            height: 50px;
            width: 100%;
            display: flex;
            justify-content: space-between;
            align-items: center;
            transition: all 0.4s;
        }

        .fullscreen-button {
            cursor: pointer;
            position: relative;
            /*top: 50%;*/
            /*right: 0;*/
            /*transform: translate(-50%, -50%);*/
            display: flex;
            justify-content: center;
            align-items: center;
            right: 1%;
            width: 70px;
            height: 50px;
        }

        .fullscreen-button svg{
            fill: white;
            width: 35px;
            transition: all 0.4s;
        }

        @keyframes spin {
            from {
                transform: rotate(0deg);
            }
            to {
                transform: rotate(360deg);
            }
        }

    </style>
    <script type="text/javascript" src="public/jsmpeg.min.js"></script>
</head>
<body>
<div class="video-container" id="video-container">
    <div class="video-overlay" id="video-overlay"></div>
<!--    <div class="play-button" id="play-button"></div>-->
    <div class="loading-screen" id="loading-screen">
        <div class="loading-spinner"></div>
    </div>

    <div class="video-controls" id="video-controls">
<!--        <div class="control-play-button"></div>-->
        <div class="play-button play-now" id="play-button"></div>
<!--        <div class="stop-icon"></div>-->
<!--        <div class="fullscreen-icon"></div>-->

        <div class="fullscreen-button" id="fullscreen">
            <svg viewBox="0 0 24 24">
                <path d="M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z"></path>
            </svg>
        </div>
    </div>
</div>
<script>
    const videoContainer = document.getElementById('video-container');

    const playButton = document.getElementById('play-button');
    const videoOverlay = document.getElementById("video-overlay");
    const loadingScreen = document.getElementById("loading-screen");
    const image = document.createElement("img");
    const videoControl = document.getElementById("video-controls");

    image.style.width = "100%";
    image.style.height = "100%";

    const btnFullScreen = document.getElementById('fullscreen');
    const btnPlay = document.getElementById('play-button');

    function closeFullscreen() {
        if (document.exitFullscreen) {
            document.exitFullscreen();
        } else if (document.webkitExitFullscreen) { /* Safari */
            document.webkitExitFullscreen();
        } else if (document.msExitFullscreen) { /* IE11 */
            document.msExitFullscreen();
        }
    }

    function openFullscreen() {
        if (videoContainer.requestFullscreen) {
            videoContainer.requestFullscreen();
        } else if (videoContainer.webkitRequestFullscreen) { /* Safari */
            videoContainer.webkitRequestFullscreen();
        } else if (videoContainer.msRequestFullscreen) { /* IE11 */
            videoContainer.msRequestFullscreen();
        }
    }

    btnFullScreen.addEventListener('click', function () {
        if (document.fullscreenElement) {
            closeFullscreen();
        } else {
            openFullscreen();
        }
    });

    videoContainer.addEventListener('mouseenter', function () {
        videoControl.style.opacity = 1;
    });

    let id = 0;

    videoContainer.addEventListener('mousemove', function () {
        videoControl.style.opacity = 1;

        if (playButton.classList.contains('play-now')) {
            return;
        }
        if (!playButton.classList.contains('paused')) {
            return;
        }
        videoContainer.style.cursor = 'auto';

        clearTimeout(id);
        id = setTimeout(() => {
            videoContainer.style.cursor = 'none';
            videoControl.style.opacity = 0;
        }, 5000);
    });

    videoContainer.addEventListener('mouseleave', function () {
        if (playButton.classList.contains('play-now')) {
            return;
        }
        if (!playButton.classList.contains('paused')) {
            return;
        }

        videoControl.style.opacity = 0;
    });

    let stopVideo = false;

    playButton.addEventListener("click", function () {
        if (!playButton.classList.contains('play-now')) {
            return;
        }

        // playButton.style.display = "none";
        videoOverlay.style.display = "block";
        loadingScreen.style.display = "block";

        const url = 'url_websocket';
        const socket = new WebSocket(url);


        let play = false;

        const handleMessage = function ({data}) {
            if (stopVideo) {
                return;
            }
            if (!play) {
                // videoContainer.innerHTML = '';
                videoOverlay.remove();
                loadingScreen.remove();
                videoContainer.appendChild(image);
                play = true;
            }
            image.src = URL.createObjectURL(data);
        };

        socket.addEventListener('message', handleMessage);
    });

    btnPlay.addEventListener('click', () => {
        playButton.classList.toggle("paused");

        if (playButton.classList.contains('play-now')) {
            playButton.classList.remove('play-now');
        } else {
            stopVideo = !stopVideo;
        }
    });
</script>
</body>
</html>
